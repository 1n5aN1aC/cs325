\documentclass[letterpaper,10pt,titlepage,fleqn]{article}

%example of setting the fleqn parameter to the article class -- the below sets the offset from flush left (fl)
\setlength{\mathindent}{1cm}

\usepackage{graphicx}                                        
\usepackage{amssymb}                                         
\usepackage{amsmath}                                         
\usepackage{amsthm} 
\usepackage{esint}
\usepackage{nopageno}
\usepackage{booktabs}                            
\usepackage{alltt}                                           
\usepackage{float}
\usepackage{color}
\usepackage{fancyhdr}
\usepackage{url}
\usepackage{balance}
\usepackage[TABBOTCAP, tight]{subfigure}
\usepackage{enumitem}
\usepackage{pstricks, pst-node}
%the following sets the geometry of the page
\usepackage{geometry}
\geometry{textheight=9in, textwidth=6.5in}
\pagestyle{fancy}
% random comment
\newcommand{\cred}[1]{{\color{red}#1}}
\newcommand{\cblue}[1]{{\color{blue}#1}}
\usepackage{hyperref}
\usepackage{textcomp}
\usepackage{listings}
\def\name{Best CS325 Group}
%% The following metadata will show up in the PDF properties
\hypersetup{
  colorlinks = true,
  urlcolor = black,
  pdfauthor = {\name},
  pdfkeywords = {cs311 ``operating systems'' files filesystem I/O},
  pdftitle = {Pertinent Information},
  pdfsubject = {Virtual Reality Lab},
  pdfpagemode = UseNone
}

\parindent = 0.0 in
\parskip = 0.2 in
\fboxsep=5mm%padding thickness
\fboxrule=4pt%border thickness

\begin{document}
\lstset{language=Python} 

\title{Programming Assignment \#1 - CS325}

\author{
	Josh LASTNAME? \and
	Jaron Thatcher \and
	Ryan Phillips
}

\date{January 29, 2014}
\maketitle
%to remove page numbers, set the page style to empty

\section*{Pseudocode}
\hrule
\begin{centering}

\textbf{Brute Force:}
\end{centering}
\begin{lstlisting}
BruteForce(arr)
  count = 0
  for i in 0 to arr.length
    for j in i to arr.length
	if arr[i] > arr[j]:
        count++ 
  return count
\end{lstlisting}

\begin{centering}
\textbf{Naive Divide and Conquer:}
\end{centering}
\begin{lstlisting}
NaiveDivideAndConquer(arr)
  count = 0
  if len(arr) < 2:
    return count
  middle = length(list_in)/2
  left = arr[:middle] // slice off half of the array
  right = arr[middle:]
  // count inversions between left and right halves
  for i in range (0,len(left)):
    for j in range (0,len(right)):
      if left[i] > right[j]:
	  count++
  // and count internal inversions recursively
  count += NaiveDivideAndConquer(left)
  count += NaiveDivideAndConquer(right)
  return count
\end{lstlisting}

\begin{centering}
\textbf{Merge and Count:}
\end{centering}

\begin{lstlisting}
MergeAndCount(arr,0)
  results = []
  // base case
  if len(x) < 2:
    return x, count
  middle =len(x)/2
  // recursive calls
  left, count = MergeAndCount(x[:middle],count)
  right, count = MergeAndCount(x[middle:],count)
  i, j = 0, 0
  while i < length(left) and j < length(right):
    if left[i] > right[j]:
      results.append(right[j])
      count += length(left) - i
      j++
    else:
      results.append(left[i])
      i++
    results += left[i:]
    results += right[j:]
    return results, count
\end{lstlisting}

\section*{Correctness Proof}
\hrule
%Correctness proof goes here

\section*{Asymptotic Analysis of Run Time}
\hrule
\begin{centering}
\textbf{Brute Force:}
\end{centering}
It has two for loops of size n duh

\begin{centering}
\textbf{Naive Divide and Conquer:}
\end{centering}
T(n) = this class is difficult

\begin{centering}
\textbf{Merge and Count:}
\end{centering}
T(n) = wow such recursion


\section*{Testing}
\hrule
The first test for correctness was performed using the provided file ``verify.txt''. It was assumed that the last value of each row was the expected number of inversions, so all 3 algorithms were run on each row of values (excluding the last), and this was compared to the expected value. This can be performed via: ``test\_correctness1(``verify.txt'')''.

The second test for correctness used the second provided file ``test\_in.txt''. Since no expected values were given, the results were just printed out. All 3 algorithms gave the same value, so this is a good indication. The results have been included below, with just a single value given (number of inversions) for each row in the test file. This test can be run by calling the function ``test\_correctness2(``test\_in.txt'')''.

Results:
252180, 250488, 243785, 247021, 250925, 256485, 249876, 253356, 255204, 247071

\section*{Extrapolation and Interpretation}
\hrule
\begin{itemize}
\item Largest input item solvable in an hour:
\item Slope of lines in log-log plot:
\item Discrepancy between actual and asymptotic:
\end{itemize}

\section*{Empirical Analysis of Run Time}
\hrule

\vskip 0.04in
\begin{center}
  \includegraphics[width=3in]{loglog.ps}
\end{center}

\vskip 0.04in
\begin{center}
  \includegraphics[width=3in]{input_time.ps}
\end{center}


\end{document}
